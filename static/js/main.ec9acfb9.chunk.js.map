{"version":3,"sources":["api.ts","TodosContext/TodosContext.tsx","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","Status","TODO_FOR_START","id","title","completed","userId","TodosContext","React","createContext","todos","setTodos","query","setQuery","isModal","setIsModal","modaledTodo","setModaledTodo","status","setStatus","visibleTodos","TodosProvider","children","useState","useEffect","todosFromServer","todosFilter","filter","todo","Active","Completed","toLowerCase","includes","getFilteredTodos","value","useMemo","Provider","TodoList","useContext","className","map","classNames","type","onClick","todoID","find","TodoFilter","onChange","event","currentTarget","placeholder","style","pointerEvents","Loader","TodoModal","userForModal","setUserForModal","getUser","user","href","email","name","App","length","ReactDOM","render","document","getElementById"],"mappings":"sPAcA,SAASA,EAAOC,GAEd,IARYC,EAQNC,EAZS,iEAYYF,EAAM,QAGjC,OAXYC,EAWA,IAVL,IAAIE,SAAQ,SAAAC,GACjBC,WAAWD,EAASH,OAUnBK,MAAK,kBAAMC,MAAML,MACjBI,MAAK,SAAAE,GAAG,OAAIA,EAAIC,UAGd,ICNFC,E,iBAAAA,K,UAAAA,E,gBAAAA,E,uBAAAA,M,KAME,IAAMC,EAAiB,CAC5BC,GAAI,EACJC,MAAO,GACPC,WAAW,EACXC,OAAQ,GAGGC,EAAeC,IAAMC,cAA2B,CAC3DC,MAAO,GACPC,SAAU,aACVC,MAAO,GACPC,SAAU,aACVC,SAAS,EACTC,WAAY,aACZC,YAAad,EACbe,eAAgB,aAChBC,OAAQ,GACRC,UAAW,aACXC,aAAc,KAOHC,EAAiC,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC/C,EAA0BC,mBAAiB,IAA3C,mBAAOb,EAAP,KAAcC,EAAd,KACA,EAA8BY,oBAAS,GAAvC,mBAAOT,EAAP,KAAgBC,EAAhB,KACA,EAAsCQ,mBAAerB,GAArD,mBAAOc,EAAP,KAAoBC,EAApB,KACA,EAA0BM,mBAAS,IAAnC,mBAAOX,EAAP,KAAcC,EAAd,KACA,EAA4BU,mBAAS,OAArC,mBAAOL,EAAP,KAAeC,EAAf,KAEAK,qBAAU,WDhCkBlC,EAAY,UCiC3BO,MAAK,SAAA4B,GAAe,OAAId,EAASc,QAC3C,IAuBH,IAAML,EArBN,WACE,IAAIM,EAAchB,EAAMiB,QAAO,SAAAC,GAC7B,OAAQV,GACN,KAAKjB,EAAO4B,OACV,OAA0B,IAAnBD,EAAKvB,UACd,KAAKJ,EAAO6B,UACV,OAA0B,IAAnBF,EAAKvB,UACd,QACE,OAAO,MAUb,OANIO,IACFc,EAAcA,EAAYC,QACxB,SAAAC,GAAI,OAAIA,EAAKxB,MAAM2B,cAAcC,SAASpB,EAAMmB,mBAI7CL,EAGYO,GAEfC,EAAQC,mBAAQ,iBAAO,CAC3BzB,QACAC,WACAC,QACAC,WACAC,UACAC,aACAC,cACAC,iBACAG,eACAF,SACAC,eACE,CACFT,EACAE,EACAI,EACAF,EACAM,EACAL,EACAG,EACAC,IAGF,OACE,cAACZ,EAAa6B,SAAd,CAAuBF,MAAOA,EAA9B,SACGZ,KCvGMe,EAAqB,WAChC,MAKIC,qBAAW/B,GAJba,EADF,EACEA,aACAL,EAFF,EAEEA,WACAE,EAHF,EAGEA,eACAD,EAJF,EAIEA,YASF,OACE,wBAAOuB,UAAU,+BAAjB,UACE,gCACE,+BACE,mCACA,6BACE,sBAAMA,UAAU,OAAhB,SACE,mBAAGA,UAAU,qBAGjB,uCACA,wCAIJ,gCACGnB,EAAaoB,KAAI,SAACZ,GAAD,OAChB,qBAEE,UAAQ,OACRW,UAAWE,IAAW,CACpB,6BAAwC,OAAXzB,QAAW,IAAXA,OAAA,EAAAA,EAAab,MAAOyB,EAAKzB,KAJ1D,UAOE,oBAAIoC,UAAU,eAAd,SAA8BX,EAAKzB,KACnC,oBAAIoC,UAAU,eAAd,SACGX,EAAKvB,WACJ,sBAAMkC,UAAU,OAAO,UAAQ,gBAA/B,SACE,mBAAGA,UAAU,qBAInB,oBAAIA,UAAU,2BAAd,SACE,mBAAGA,UAAWE,IAAW,CACvB,mBAAoBb,EAAKvB,UACzB,mBAAoBuB,EAAKvB,YAF3B,SAKGuB,EAAKxB,UAGV,oBAAImC,UAAU,8BAAd,SACE,wBACE,UAAQ,eACRA,UAAU,SACVG,KAAK,SACLC,QAAS,WApDvB,IAAwBC,EAqDR7B,GAAW,GArDH6B,EAsDOhB,EAAKzB,GArDlCc,EAAeG,EAAayB,MAC1B,SAAAjB,GAAI,OAAIA,EAAKzB,KAAOyC,OA8CZ,SASE,sBAAML,UAAU,OAAhB,SACE,mBAAGA,UAAWX,EAAKzB,KAAOa,EAAYb,GAClC,mBACA,uBApCLyB,EAAKzB,aClCT2C,EAAa,WACxB,MAAuCR,qBAAW/B,GAA1CK,EAAR,EAAQA,MAAOC,EAAf,EAAeA,SAAUM,EAAzB,EAAyBA,UAEzB,OACE,uBAAMoB,UAAU,mBAAhB,UACE,mBAAGA,UAAU,UAAb,SACE,sBAAMA,UAAU,SAAhB,SACE,yBACE,UAAQ,eACRQ,SAAU,SAACC,GAAD,OAAW7B,EAAU6B,EAAMC,cAAcf,QAFrD,UAIE,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,SAAd,oBACA,wBAAQA,MAAM,YAAd,8BAKN,oBAAGK,UAAU,qDAAb,UACE,uBACE,UAAQ,cACRG,KAAK,OACLH,UAAU,QACVW,YAAY,YACZhB,MAAOtB,EACPmC,SAAU,SAACC,GAAD,OAAWnC,EAASmC,EAAMC,cAAcf,UAEpD,sBAAMK,UAAU,eAAhB,SACE,mBAAGA,UAAU,8BAGf,sBAAMA,UAAU,gBAAgBY,MAAO,CAAEC,cAAe,OAAxD,SACGxC,GAEC,wBACE,UAAQ,oBACR8B,KAAK,SACLH,UAAU,SACVI,QAAS,kBAAM9B,EAAS,gBCtCzBwC,G,MAAmB,kBAC9B,qBAAKd,UAAU,SAAS,UAAQ,SAAhC,SACE,qBAAKA,UAAU,wBCCNe,EAAsB,WACjC,MAAoDhB,qBAAW/B,GAAvDQ,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,YAAaC,EAAjC,EAAiCA,eAE/Bd,EAIEa,EAJFb,GACAC,EAGEY,EAHFZ,MACAC,EAEEW,EAFFX,UACAC,EACEU,EADFV,OAGF,EAAwCiB,mBAAsB,MAA9D,mBAAOgC,EAAP,KAAqBC,EAArB,KAQA,OANAhC,qBAAU,YLSW,SAAClB,GAAD,OAAoBhB,EAAG,iBAAiBgB,KKR3DmD,CAAQnD,GAAQT,MACd,SAAA6D,GAAI,OAAIF,EAAgBE,SAK1B,sBAAKnB,UAAU,kBAAkB,UAAQ,QAAzC,UACE,qBAAKA,UAAU,qBAEbgB,EAGA,sBAAKhB,UAAU,aAAf,UACE,yBAAQA,UAAU,kBAAlB,UACE,qBACEA,UAAU,0CACV,UAAQ,eAFV,yBAIYpC,KAIZ,wBACEuC,KAAK,SACLH,UAAU,SACV,UAAQ,cACRI,QAAS,WACP5B,GAAW,GACXE,EAAef,SAKrB,sBAAKqC,UAAU,kBAAf,UACE,mBAAGA,UAAU,QAAQ,UAAQ,cAA7B,SACGnC,IAGH,oBAAGmC,UAAU,QAAQ,UAAQ,aAA7B,UACGlC,EACC,wBAAQkC,UAAU,mBAAlB,kBAEA,wBAAQA,UAAU,kBAAlB,qBAGD,OAED,mBAAGoB,KAAI,iBAAYJ,EAAaK,OAAhC,SACGL,EAAaM,gBAtCtB,cAAC,EAAD,QCjBKC,EAAgB,WAC3B,MAA2BxB,qBAAW/B,GAA9BO,EAAR,EAAQA,QAASJ,EAAjB,EAAiBA,MAEjB,OACE,qCACE,qBAAK6B,UAAU,UAAf,SACE,qBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,MAAf,UACE,oBAAIA,UAAU,QAAd,oBAEA,qBAAKA,UAAU,QAAf,SACE,cAAC,EAAD,MAGF,qBAAKA,UAAU,QAAf,SACI7B,EAAMqD,OAIN,cAAC,EAAD,IAHA,cAAC,EAAD,aASTjD,GAAW,cAAC,EAAD,QChClBkD,IAASC,OACP,cAAC,EAAD,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.ec9acfb9.chunk.js","sourcesContent":["import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useMemo, useState } from 'react';\nimport { Todo } from '../types/Todo';\nimport { getTodos } from '../api';\n\ninterface TodoContext {\n  todos: Todo[],\n  setTodos: React.Dispatch<React.SetStateAction<Todo[]>>,\n  query: string,\n  setQuery: React.Dispatch<React.SetStateAction<string>>,\n  isModal: boolean,\n  setIsModal: React.Dispatch<React.SetStateAction<boolean>>,\n  modaledTodo: Todo,\n  setModaledTodo: React.Dispatch<React.SetStateAction<Todo>>,\n  status: string,\n  setStatus: React.Dispatch<React.SetStateAction<string>>,\n  visibleTodos: Todo[],\n}\n\nenum Status {\n  All = 'all',\n  Active = 'active',\n  Completed = 'completed',\n}\n\nexport const TODO_FOR_START = {\n  id: 0,\n  title: '',\n  completed: false,\n  userId: 0,\n};\n\nexport const TodosContext = React.createContext<TodoContext>({\n  todos: [],\n  setTodos: () => { },\n  query: '',\n  setQuery: () => { },\n  isModal: false,\n  setIsModal: () => { },\n  modaledTodo: TODO_FOR_START,\n  setModaledTodo: () => { },\n  status: '',\n  setStatus: () => { },\n  visibleTodos: [],\n});\n\ninterface Props {\n  children: React.ReactNode;\n}\n\nexport const TodosProvider: React.FC<Props> = ({ children }) => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [isModal, setIsModal] = useState(false);\n  const [modaledTodo, setModaledTodo] = useState<Todo>(TODO_FOR_START);\n  const [query, setQuery] = useState('');\n  const [status, setStatus] = useState('all');\n\n  useEffect(() => {\n    getTodos().then(todosFromServer => setTodos(todosFromServer));\n  }, []);\n\n  function getFilteredTodos() {\n    let todosFilter = todos.filter(todo => {\n      switch (status) {\n        case Status.Active:\n          return todo.completed === false;\n        case Status.Completed:\n          return todo.completed === true;\n        default:\n          return true;\n      }\n    });\n\n    if (query) {\n      todosFilter = todosFilter.filter(\n        todo => todo.title.toLowerCase().includes(query.toLowerCase()),\n      );\n    }\n\n    return todosFilter;\n  }\n\n  const visibleTodos = getFilteredTodos();\n\n  const value = useMemo(() => ({\n    todos,\n    setTodos,\n    query,\n    setQuery,\n    isModal,\n    setIsModal,\n    modaledTodo,\n    setModaledTodo,\n    visibleTodos,\n    status,\n    setStatus,\n  }), [\n    todos,\n    query,\n    modaledTodo,\n    isModal,\n    visibleTodos,\n    setIsModal,\n    status,\n    setStatus,\n  ]);\n\n  return (\n    <TodosContext.Provider value={value}>\n      {children}\n    </TodosContext.Provider>\n  );\n};\n","import React, { useContext } from 'react';\nimport classNames from 'classnames';\nimport { TodosContext } from '../../TodosContext/TodosContext';\nimport { Todo } from '../../types/Todo';\n\nexport const TodoList: React.FC = () => {\n  const {\n    visibleTodos,\n    setIsModal,\n    setModaledTodo,\n    modaledTodo,\n  } = useContext(TodosContext);\n\n  function getModaledTodo(todoID: number) {\n    setModaledTodo(visibleTodos.find(\n      todo => todo.id === todoID,\n    ) as Todo);\n  }\n\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {visibleTodos.map((todo: Todo) => (\n          <tr\n            key={todo.id}\n            data-cy=\"todo\"\n            className={classNames({\n              'has-background-info-light': modaledTodo?.id === todo.id,\n            })}\n          >\n            <td className=\"is-vcentered\">{todo.id}</td>\n            <td className=\"is-vcentered\">\n              {todo.completed && (\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              )}\n            </td>\n            <td className=\"is-vcentered is-expanded\">\n              <p className={classNames({\n                'has-text-danger': !todo.completed,\n                'has-text-success': todo.completed,\n              })}\n              >\n                {todo.title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => {\n                  setIsModal(true);\n                  getModaledTodo(todo.id);\n                }}\n              >\n                <span className=\"icon\">\n                  <i className={todo.id === modaledTodo.id\n                    ? 'far fa-eye-slash'\n                    : 'far fa-eye'}\n                  />\n                </span>\n              </button>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import { useContext } from 'react';\nimport { TodosContext } from '../../TodosContext/TodosContext';\n\nexport const TodoFilter = () => {\n  const { query, setQuery, setStatus } = useContext(TodosContext);\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            onChange={(event) => setStatus(event.currentTarget.value)}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={(event) => setQuery(event.currentTarget.value)}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {query && (\n            // eslint-disable-next-line jsx-a11y/control-has-associated-label\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => setQuery('')}\n            />\n          )}\n        </span>\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useContext, useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { TODO_FOR_START, TodosContext } from '../../TodosContext/TodosContext';\nimport { getUser } from '../../api';\nimport { User } from '../../types/User';\n\nexport const TodoModal: React.FC = () => {\n  const { setIsModal, modaledTodo, setModaledTodo } = useContext(TodosContext);\n  const {\n    id,\n    title,\n    completed,\n    userId,\n  } = modaledTodo;\n\n  const [userForModal, setUserForModal] = useState<User | null>(null);\n\n  useEffect(() => {\n    getUser(userId).then(\n      user => setUserForModal(user),\n    );\n  });\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!userForModal ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => {\n                setIsModal(false);\n                setModaledTodo(TODO_FOR_START);\n              }}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {completed ? (\n                <strong className=\"has-text-success\">Done</strong>\n              ) : (\n                <strong className=\"has-text-danger\">Planned</strong>\n              )}\n\n              {' by '}\n\n              <a href={`mailto:${userForModal.email}`}>\n                {userForModal.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useContext } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { TodosContext } from './TodosContext/TodosContext';\n\nexport const App: React.FC = () => {\n  const { isModal, todos } = useContext(TodosContext);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter />\n            </div>\n\n            <div className=\"block\">\n              {!todos.length ? (\n                <Loader />\n\n              ) : (\n                <TodoList />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n      {isModal && <TodoModal />}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\nimport { TodosProvider } from './TodosContext/TodosContext';\n\nReactDOM.render(\n  <TodosProvider>\n    <App />\n  </TodosProvider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}